함수
자바스크립트에서 함수는 일련의 처리를 하나로 모아 언제든 호출할 수 있도록 만들어 둔 것입니다.
함수의 입력 값을 인수라고 부르고 함수의 출력 값을 반환값이라고 부른다.

함수선언문으로 함수 정의
function 키워드를 사용하여 정의한다.
ex) function square(X) {
  return x * x;
}
리턴문 다음에는 줄 바꿈 문자를 넣지 말 것
return 
x * x; 즉값이 없는 리턴문으로 해석한다.

함수의 실행 흐름
호출한 코드에 있는 인수가 함수의 정의문의 인자에 대입된다..
함수 정의문의 중괄호 안에 작성된 프로그램이 순차적으로 실행.
return 문이 실행되면 호출한 코드로 돌아간다. return 문의 값은 함수의 반환값이된다.
return 문이 실행되지 않은 상태로 마지막 문장이 실행되면 호출한 코드로 돌아간 후에 undefined가 함수의 반환 값이된다.

함수 선언문의 끌어올림
console.log(square(5));
function square (x) {return x * x;}
 
값으로서의 함수 
var sq = square;
console.log(sq(5));

참조에 의한 호출과 값에 의한 호출 
function add1(x) {return x = x + 1; }
var a = 3;
var b = add1(a);
console.log( a,b);
--------------------
function add1(x) {p.x = p.x + 1 ; p.y = p.y + 1 ; return p; }
var a = {x:3, y:4};
var b = add1(a);
console.log( a,b);

변수의 유효범위 (scope) 스코프
유효 범위를 결정하는 방법에는 두 가지가 있다.
프로그램의 구문만으료 유효 범위를 정하는 어휘적범위 (렉시컬 스코프) 
프로그램 실행 중에 유효 범위를 정하는 동적범위(다이나믹 스코프)

변수의 충돌 
var a = 'global';
function f(){
  var a = 'local';
  console.log(a);// local
  return a;
}
f();
console.log(a);//global

함수안에서의 변수 선언과 변수 끌어올림 / 리터럴 함수는 끌어올리지 못한다.

함수 안에서 변수 선언 생략하면 전역변수로 선언된다.

ex6 let과 const는 { } 중괄호 안에서만 유효 

